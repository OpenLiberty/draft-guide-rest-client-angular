{"version":3,"sources":["src/$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/app.component.ts","src/app/app.module.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<!-- tag::artistsDiv[] -->\n<div *ngFor=\"let artist of artists\">\n  <!-- tag::artistNameAndAlbumsLengthPlaceholders[] -->\n  <p>{{ artist.name }} wrote {{ artist.albums.length }} albums: </p>\n  <!-- end::artistNameAndAlbumsLengthPlaceholders[] -->\n  <!-- tag::albumDiv[] -->\n  <div *ngFor=\"let album of artist.albums\">\n    <p style=\"text-indent: 20px\">\n      Album titled <b>{{ album.title }}</b> by\n                   <b>{{ album.artist }}</b> contains\n                   <b>{{ album.ntracks }}</b> tracks\n    </p>\n  </div>\n  <!-- end::albumDiv[] -->\n</div>\n<!-- end::artistsDiv[] -->\n","// tag::importOnInitAndAngularCorePackage[]\nimport { Component, OnInit } from '@angular/core';\n// end::importOnInitAndAngularCorePackage[]\n// tag::importHttpClient[]\nimport { HttpClient } from '@angular/common/http';\n// end::importHttpClient[]\n// tag::importInjectable[]\nimport { Injectable } from '@angular/core';\n// end::importInjectable[]\n\n// tag::atInjectable[]\n@Injectable()\n// end::atInjectable[]\n// tag::artistsServiceClass[]\nexport class ArtistsService {\n  // tag::httpClientInstance[]\n  constructor(private http: HttpClient) { }\n  // end::httpClientInstance[]\n\n  // tag::artistsUrl[]\n  private static ARTISTS_URL = '/artists';\n  // end::artistsUrl[]\n\n  // tag::fetchArtistsMethod[]\n  // tag::asyncFeature[]\n  async fetchArtists() {\n  // end::asyncFeature[]\n    try {\n      // tag::httpInstanceAndAwaitFeatureAndHttpGetAndToPromise[]\n      const data: any = await this.http.get(ArtistsService.ARTISTS_URL).toPromise();\n      // end::httpInstanceAndAwaitFeatureAndHttpGetAndToPromise[]\n      return data;\n    } catch (error) {\n      console.error(`Error occurred: ${error}`);\n    }\n  }\n  // end::fetchArtistsMethod[]\n}\n// end::artistsServiceClass[]\n\n// tag::atComponent[]\n@Component({\n  selector: 'app-root',\n  // tag::templateUrl[]\n  templateUrl: './app.component.html',\n  // end::templateUrl[]\n  // tag::providersProperty[]\n  providers: [ ArtistsService ],\n  // end::providersProperty[]\n  // tag::styleUrls[]\n  styleUrls: ['./app.component.css']\n  // end::styleUrls[]\n})\n// end::atComponent[]\n// tag::appComponentClass[]\n// tag::onInitInterface[]\nexport class AppComponent implements OnInit {\n// end::onInitInterface[]\n  // tag::artistsClassMember[]\n  artists: any[] = [];\n  // end::artistsClassMember[]\n\n  // tag::artistsServiceInstanceDeclaration[]\n  constructor(private artistsService: ArtistsService) { }\n  // end::artistsServiceInstanceDeclaration[]\n\n  // tag::ngOnInitMethod[]\n  ngOnInit() {\n    // tag::thenClause[]\n    // tag::artistsServiceInstance[]\n    this.artistsService.fetchArtists().then(data => {\n    // end::artistsServiceInstance[]\n      this.artists = data;\n    });\n    // end::thenClause[]\n  }\n  // end::ngOnInitMethod[]\n}\n// end::appComponentClass[]\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n// tag::importHttpClientModule[]\nimport { HttpClientModule } from '@angular/common/http';\n// end::importHttpClientModule[]\nimport { AppComponent } from './app.component';\n\n// tag::atNgModule[]\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  // tag::importsArray[]\n  imports: [\n    BrowserModule,\n    // tag::httpClientModule[]\n    HttpClientModule,\n    // end::httpClientModule[]\n  ],\n  // end::importsArray[]\n  providers: [],\n  bootstrap: [AppComponent]\n})\n// end::atNgModule[]\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}